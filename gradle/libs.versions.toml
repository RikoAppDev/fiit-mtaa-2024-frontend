[versions]
agp = "8.3.1"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.8.2"
androidx-appcompat = "1.6.1"
androidx-constraintlayout = "2.1.4"
androidx-core-ktx = "1.12.0"
androidx-espresso-core = "3.5.1"
androidx-material = "1.11.0"
androidx-test-junit = "1.1.5"
compose = "1.6.5"
compose-plugin = "1.6.1"
junit = "4.13.2"
kotlin = "1.9.23"
kotlinxDatetime = "0.5.0"
ktor = "2.3.9"
coroutines = "1.8.0"
decompose = "3.0.0-alpha07"
decomposeCoroutines = "1.3.0"
kotlinxSerializationJson = "1.6.3"
coil = "3.0.0-alpha06"
mapsPlatformSecrets = "2.0.1"
mapsCompose = "2.11.2"
playServicesLocation = "21.2.0"
playServicesMaps = "18.2.0"
sqldelight = "2.0.1"
startupRuntime = "1.1.1"
peekabooImagePicker = "0.5.1"
peekabooUi = "0.5.1"
geoCompose = "0.6.0"
googleServices = "4.4.1"
kmpnotifier = "0.5.0"
statelyCommon = "2.0.5"
buildkonfigGradlePlugin = "0.15.1"
permissionsCompose = "0.17.0"
crashReportingCrashlytics = "0.4.0"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
#ktor-client
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-logger = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-web-socket = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
#coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
#decompose
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decomposeExtensions = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
decompose-lifecycle-corutines = { module = "com.arkivanov.essenty:lifecycle-coroutines", version.ref = "decomposeCoroutines" }
#serialisation
kotlinxSerializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
#coil
coilCompose = { module = "io.coil-kt.coil3:coil-compose-core", version.ref = "coil" }
coilNetwork = { module = "io.coil-kt.coil3:coil-network-ktor", version.ref = "coil" }
#maps
maps-compose = { module = "com.google.maps.android:maps-compose", version.ref = "mapsCompose" }
play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocation" }
play-services-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "playServicesMaps" }
#database
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
#kotlin dates
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
#staurtup-runtime
androidx-startup-runtime = { group = "androidx.startup", name = "startup-runtime", version.ref = "startupRuntime" }
#pekaboo image picker
peekaboo-image-picker = { module = "io.github.onseok:peekaboo-image-picker", version.ref = "peekabooImagePicker" }
peekaboo-ui = { module = "io.github.onseok:peekaboo-ui", version.ref = "peekabooUi" }
#geolocation
geo-compose = { module = "dev.icerock.moko:geo-compose", version.ref = "geoCompose" }
#maps
google-services = { group = "com.google.gms", name = "google-services", version.ref = "googleServices" }
#firebase push notifications
stately-common = { module = "co.touchlab:stately-common", version.ref = "statelyCommon" }
kmpnotifier = { module = "io.github.mirzemehdi:kmpnotifier", version.ref = "kmpnotifier" }
#build config
buildkonfig-gradle-plugin = { module = "com.codingfeline.buildkonfig:buildkonfig-gradle-plugin", version.ref = "buildkonfigGradlePlugin" }
#permissions
permissions-compose = { module = "dev.icerock.moko:permissions-compose", version.ref = "permissionsCompose" }
#crashlytics
crash-reporting-crashlytics = { module = "dev.icerock.moko:crash-reporting-crashlytics", version.ref = "crashReportingCrashlytics" }

[bundles]
coil = ["coilCompose", "coilNetwork"]

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
mapsPlatformSecrets = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "mapsPlatformSecrets" }